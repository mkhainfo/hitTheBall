{"version":3,"sources":["game/Game.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSvg","w","window","innerWidth","h","innerHeight","svg","update","state","$set","box","join","size","Math","sqrt","setState","setCell","cell","x","y","setPaddles","depth","ready","paddles","length","top","bottom","left","right","makeKey","min","max","undefined","arr","i","push","round","random","arrSum","reduce","a","b","pickPaddles","keys","score","on","display","setBall","ball","r","setInitialVelocity","dx","dy","moveBall","pad","xMid","yMid","xPos","yPos","bounce","move","movePaddles","halfX","halfY","rightBound","lowerBound","setGame","sizeGame","setTimeout","animate","addEventListener","setInterval","nextProps","nextState","stage","nextStage","shuffling","shuffle","removeEventListener","clearInterval","s","react_default","createElement","width","height","viewBox","onClick","handleClick","id","fillOpacity","cx","cy","fill","Component","App","getScore","getPosition","cursor","style","App_Input","pos","Game_Game","App_Score","Input","_this2","changePos","e","_ref","type","clientX","clientY","touches","_ref2","slicedToArray","styles","input","onMouseMove","onTouchMove","Score","_this3","fontSize","color","textAlign","zIndex","position","backgroundColor","opacity","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebe97808.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport update from 'immutability-helper'\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      svg: {},\r\n      cell: {},\r\n      paddles: {\r\n        x: {\r\n          top: { display: 0 },\r\n          bottom: { display: 0 },\r\n        },\r\n        y: {\r\n          left: { display: 0 },\r\n          right: { display: 0 },\r\n        },\r\n      },\r\n      ball: {},\r\n    }\r\n  }\r\n\r\n  setSvg = () => {\r\n    let w = window.innerWidth, h = window.innerHeight,\r\n    svg = update(this.state.svg, {\r\n      w: {$set: w},\r\n      h: {$set: h},\r\n      box: {$set: [0, 0, w, h].join(' ')},\r\n      size: {$set: Math.sqrt( w*w + h*h )}\r\n    })\r\n    this.setState({ svg: svg })\r\n  }\r\n\r\n  setCell = () => {\r\n    let size = 8 / 10,\r\n      w = this.state.svg.w * size, h = this.state.svg.h * size,\r\n    cell = update(this.state.cell, {\r\n      w: {$set: w},\r\n      h: {$set: h},\r\n      x: {$set: (this.state.svg.w - w) / 2},\r\n      y: {$set: (this.state.svg.h - h) / 2},\r\n      size: {$set: size},\r\n    })\r\n    this.setState({cell: cell})\r\n  }\r\n\r\n  setPaddles = () => {\r\n    let svg = this.state.svg, cell = this.state.cell,\r\n        length = 1/9, depth = svg.size/100,\r\n        ready = update(this.state.paddles, {\r\n          depth: {$set: depth},\r\n          x: {\r\n            length: {$set: svg.w * length},\r\n            top: {y: {$set: cell.y},},\r\n            bottom: {y: {$set: cell.y + cell.h - depth}, },\r\n          },\r\n          y: {\r\n            length: {$set: svg.h * length},\r\n            left: {x: {$set: cell.x},},\r\n            right: {x: {$set: cell.x + cell.w - depth},},\r\n          },\r\n        })\r\n    this.setState({paddles: ready})\r\n  }\r\n\r\n  makeKey = (min, max) => {\r\n    max = max === undefined ? min : max\r\n    let arr = []\r\n    for (let i = 0; i < 4; i++) {\r\n      arr.push(Math.round(Math.random()))\r\n    }\r\n    let arrSum = arr.reduce( (a, b) => a + b )\r\n    return min <= arrSum && arrSum <= max ? arr : this.makeKey(min, max)\r\n  }\r\n\r\n  pickPaddles = (keys) => {\r\n  //type keys = [num, num, num, num]\r\n    if (keys === undefined) {\r\n      if (this.state.score < 1) {\r\n        keys = [0,1,0,0]\r\n      } else if (this.state.score < 5) {\r\n        keys = this.makeKey(1)\r\n      } else if (this.state.score < 6) {\r\n        keys = this.makeKey(2)\r\n      } else if (this.state.score < 7) {\r\n        keys = this.makeKey(1, 2)\r\n      } else if (this.state.score < 15) {\r\n        keys = this.makeKey(2, 3)\r\n      } else { keys = this.makeKey(3, 4)}\r\n    }\r\n\r\n    //////FOR TESTING\r\n    //keys = [1,1,1,1]\r\n    //////FOR TESTING\r\n\r\n    let on = update(this.state.paddles, {\r\n      x: {\r\n        top: {display: {$set: keys[0] },},\r\n        bottom: {display: {$set: keys[1] },},\r\n      },\r\n      y: {\r\n        left: {display: {$set: keys[2] },},\r\n        right: {display: {$set: keys[3] },},\r\n      },\r\n    })\r\n    this.setState({paddles: on})\r\n  }\r\n\r\n  setBall = () => {\r\n    let svg = this.state.svg,\r\n    ball = update(this.state.ball, {\r\n      x: {$set: svg.w/2},\r\n      y: {$set: svg.h/2},\r\n      r: {$set: svg.size/100},\r\n      })\r\n    this.setState({ ball })\r\n  }\r\n\r\n  setInitialVelocity = () => {\r\n    let svg = this.state.svg,\r\n    ball = update(this.state.ball, {\r\n      dx: {$set: svg.size/500},\r\n      dy: {$set: svg.size/500},\r\n      })\r\n    this.setState({ ball })\r\n  }\r\n\r\n  moveBall = () => {\r\n\r\n    let svg = this.state.svg, cell = this.state.cell, ball = this.state.ball,\r\n      pad = this.state.paddles, xMid = svg.w / 2, yMid = svg.h / 2,\r\n      dx = ball.dx, dy = ball.dy, xPos = ball.x, yPos = ball.y,\r\n      score = this.state.score\r\n\r\n    // if the ball hits a vertical wall\r\n     if ( ball.x + ball.dx < 0 || ball.x + ball.dx > svg.w ) {\r\n      xPos = ball.x < 0 ? svg.w : 0\r\n      yPos = ball.y + (yMid - ball.y) * 2\r\n    } else if ( ball.y + ball.dy < 0 || ball.y + ball.dy > svg.h ) {\r\n      xPos = ball.x + (xMid - ball.x) * 2\r\n      yPos = ball.y < 0 ? svg.h : 0\r\n    } else if ( ball.x + dx - ball.r < cell.x\r\n          || ball.x + ball.dx + ball.r > cell.x + cell.w) {\r\n      dx *= -1\r\n    // if ball hits horizontal wall\r\n    } else if (ball.y + dy - ball.r  < cell.y\r\n          || ball.y + ball.r + ball.dy > cell.y + cell.h ) {\r\n      dy *= -1\r\n    // if ball hits x paddle. paddle must be present.\r\n    } else if (( ball.y - ball.r + dy <= cell.y + pad.depth && pad.x.top.display > 0 )\r\n    || ( ball.y + ball.r + dy >= cell.y + cell.h - pad.depth && pad.x.bottom.display > 0 )) {\r\n    if (pad.x.x <= ball.x + ball.r + dx && ball.x - ball.r + dx <= pad.x.x + pad.x.length) {\r\n      dy *= -1\r\n      score += 1\r\n      this.props.score(score)\r\n      this.pickPaddles()\r\n    } else {\r\n      dy = 0\r\n      score = ':('\r\n      this.props.score(score)\r\n    }\r\n    // if ball hits y paddle. paddle must be present.\r\n  } else if (( ball.x - ball.r + dx <= cell.x + pad.depth && pad.y.left.display > 0 )\r\n    || ( ball.x + ball.r + dx >= cell.x + cell.w - pad.depth && pad.y.right.display > 0 )) {\r\n    if (pad.y.y <= ball.y + ball.r + dx && ball.y - ball.r + dy <= pad.y.y + pad.y.length) {\r\n      dx *= -1\r\n      score += 1\r\n      this.props.score(score)\r\n      this.pickPaddles()\r\n    } else {\r\n      dx = 0\r\n      score = ':('\r\n      this.props.score(score)\r\n    }\r\n  }\r\n\r\n    let bounce = update(ball, {\r\n      dx: {$set: dx},\r\n      dy: {$set: dy},\r\n      })\r\n\r\n    let move = update(bounce, {\r\n      x: {$set: xPos + ball.dx},\r\n      y: {$set: yPos + ball.dy},\r\n      })\r\n\r\n    this.setState({ ball: move, score })\r\n  }\r\n\r\n  movePaddles = () => {\r\n    let cell = this.state.cell, pad = this.state.paddles,\r\n      halfX = pad.x.length / 2, halfY = pad.y.length / 2,\r\n      rightBound = cell.x + cell.w - halfX,\r\n      lowerBound = cell.y + cell.h - halfY,\r\n      x = this.props.x, y = this.props.y // manual <Input />\r\n      //x = this.state.ball.x, y = this.state.ball.y // automated paddles\r\n\r\n    x = x < cell.x + halfX ? cell.x : x > rightBound ? rightBound - halfX : x - halfX\r\n    y = y < cell.y + halfY ? cell.y : y > lowerBound ? lowerBound - halfY : y - halfY\r\n\r\n    let move = update(pad, {\r\n      x: {x: {$set: x }},\r\n      y: {y: {$set: y }},\r\n    })\r\n\r\n    this.setState({ paddles: move })\r\n  }\r\n\r\n  setGame = () => {\r\n    this.props.score('hit the ball')\r\n    this.setState({score: 0})\r\n    this.sizeGame()\r\n    setTimeout(this.setInitialVelocity, 1)\r\n  }\r\n\r\n  sizeGame = () => {\r\n    this.setSvg()\r\n    setTimeout(this.setCell)\r\n    setTimeout(this.setBall)\r\n    setTimeout(this.setPaddles, 1)\r\n  }\r\n\r\n  animate = () => {\r\n    this.movePaddles()\r\n    this.moveBall()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setGame()\r\n    window.addEventListener('resize', this.sizeGame)\r\n    window.setInterval(this.animate, 10)\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return this.state !== nextState\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.stage === 1) {\r\n      this.pickPaddles()\r\n      this.props.nextStage()\r\n    } else if ( this.props.stage === 2\r\n      && ( this.state.score === ':(' || this.state.score === ':)' )) {\r\n      if (this.state.score === ':(') { this.pickPaddles([0,0,0,0]) }\r\n      this.props.nextStage()\r\n    } else if (this.props.stage === 4) {\r\n      if (this.state.score === ':)') { this.pickPaddles([0,0,0,0]) }\r\n      this.props.nextStage(0)\r\n      this.setGame()\r\n    } else if (this.props.shuffling === true) {\r\n      this.pickPaddles()\r\n      this.props.shuffle()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.sizeGame)\r\n    window.clearInterval(window.setInterval(this.animate, 10))\r\n  }\r\n\r\n  render() {\r\n    let s = this.state, pad = this.state.paddles\r\n    return(\r\n      <svg\r\n        width={ s.svg.w } height={ s.svg.h }\r\n        viewBox={ s.svg.box } onClick={ this.handleClick }>\r\n\r\n        <rect id='cell'\r\n          width={ s.cell.w } height={ s.cell.h }\r\n          x={ s.cell.x } y={ s.cell.y }\r\n          fillOpacity={ 1 } />\r\n\r\n        <circle id='ball'\r\n          cx={ s.ball.x } cy={ s.ball.y }\r\n          r={ s.ball.r } fill={ this.props.fill } />\r\n\r\n        <rect id='paddleXT'\r\n          width={ pad.x.length } height={ pad.depth }\r\n          x={ pad.x.x } y={ pad.x.top.y }\r\n          fill={ this.props.fill } fillOpacity={ pad.x.top.display } />\r\n        <rect id='paddleXB'\r\n          width={ pad.x.length } height={ pad.depth }\r\n          x={ pad.x.x } y={ pad.x.bottom.y }\r\n          fill={ this.props.fill } fillOpacity={ pad.x.bottom.display } />\r\n        <rect id='paddleYL'\r\n          width={ pad.depth } height={ pad.y.length }\r\n          x={ pad.y.left.x } y={ pad.y.y }\r\n          fill={ this.props.fill } fillOpacity={pad.y.left.display} />\r\n        <rect id='paddleYR'\r\n          width={ pad.depth } height={ pad.y.length }\r\n          x={ pad.y.right.x } y={ pad.y.y }\r\n          fill={ this.props.fill } fillOpacity={pad.y.right.display} />\r\n\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n//import update from 'immutability-helper'\r\nimport Game from './game/Game.js'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      stage: 0,\r\n      shuffle: false,\r\n      cursor: {cursor: 'default'},\r\n    }\r\n  }\r\n\r\ngetScore = score => {\r\n  this.setState({ score })\r\n}\r\n\r\ngetPosition = ( x, y ) => {\r\n  this.setState({ x, y })\r\n}\r\n\r\nnextStage = stage => {\r\n  if (stage === undefined) { stage = this.state.stage + 1 }\r\n  this.setState({ stage })\r\n}\r\n\r\nshuffle = () => {\r\n  let shuffle = this.state.shuffle ? false : true\r\n  this.setState({shuffle})\r\n}\r\n\r\ncomponentDidUpdate() {\r\n  if (this.state.stage === 1 && this.state.cursor.cursor === 'default') {\r\n    this.setState({cursor: {cursor: 'none'}})\r\n  } else if ( (this.state.score === ':(' || this.state.score === ':)')\r\n    && this.state.cursor.cursor === 'none' ) {\r\n    this.setState({cursor: {cursor: 'default'}})\r\n  }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <span id='view' style={this.state.cursor}>\r\n        <Input pos={this.getPosition}\r\n          score={this.state.score} shuffle={this.shuffle}\r\n          stage={this.state.stage} nextStage={this.nextStage}/>\r\n        <Game fill='#eeeeee'\r\n          score={this.getScore}\r\n          stage={this.state.stage} nextStage={this.nextStage}\r\n          x={this.state.x} y={this.state.y}\r\n          shuffle={this.shuffle} shuffling={this.state.shuffle}/>\r\n        <Score score={this.state.score} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  changePos = e => {\r\n    let [x, y] = e.type === 'mousemove' ?\r\n      ([ e.clientX, e.clientY ]) :\r\n      ([ e.touches[0].clientX, e.touches[0].clientY ]);\r\n    this.props.pos(x, y)\r\n    return false\r\n  }\r\n\r\n  handleClick = e => {\r\n    if (this.props.stage === 0 || this.props.stage === 3){\r\n      this.props.nextStage()\r\n    } else {this.props.shuffle()}\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span style={styles.input} onClick={this.handleClick}\r\n        onMouseMove={this.changePos} onTouchMove={this.changePos} />\r\n    )\r\n  }\r\n}\r\n\r\nclass Score extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        score: 0,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span id='score' style={styles.score}>\r\n        {this.props.score}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  score: {\r\n    fontSize: '6vh',\r\n    color: '#eee',\r\n    textAlign: 'center',\r\n    zIndex: 3,\r\n    position: 'absolute',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    backgroundColor: 'cyan',\r\n    opacity: 0,\r\n    zIndex: 5,\r\n  },\r\n\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}