{"version":3,"sources":["game/Game.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSvg","w","window","innerWidth","h","innerHeight","svg","update","state","$set","box","join","size","Math","sqrt","setState","setCell","cell","x","y","setPaddles","depth","ready","paddles","length","top","bottom","left","right","pickPaddles","keys","printArr","min","max","undefined","arr","i","push","round","random","arrSum","reduce","a","b","score","on","display","setBall","ball","r","dx","dy","moveBall","bounce","pad","move","movePaddles","halfX","halfY","rightBound","lowerBound","setGame","sizeGame","setTimeout","animate","addEventListener","setInterval","nextProps","nextState","stage","nextStage","sh","shuffle","removeEventListener","clearInterval","s","react_default","createElement","width","height","viewBox","onClick","handleClick","id","cx","cy","fill","fillOpacity","Component","App","getScore","getPosition","App_Input","pos","Game_Game","App_Score","Input","_this2","changePos","e","_ref","type","clientX","clientY","touches","_ref2","slicedToArray","style","styles","input","onMouseMove","onTouchMove","Score","_this3","fontSize","color","textAlign","zIndex","position","backgroundColor","opacity","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bde9871.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport update from 'immutability-helper'\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      svg: {},\r\n      cell: {},\r\n      paddles: {\r\n        x: {\r\n          top: { display: 0 },\r\n          bottom: { display: 0 },\r\n        },\r\n        y: {\r\n          left: { display: 0 },\r\n          right: { display: 0 },\r\n        },\r\n      },\r\n      ball: {},\r\n    }\r\n  }\r\n\r\n  setSvg = () => {\r\n    let w = window.innerWidth, h = window.innerHeight\r\n    let svg = update(this.state.svg, {\r\n      w: {$set: w},\r\n      h: {$set: h},\r\n      box: {$set: [0, 0, w, h].join(' ')},\r\n      size: {$set: Math.sqrt( w*w + h*h )}\r\n    })\r\n    this.setState({ svg: svg })\r\n  }\r\n\r\n  setCell = () => {\r\n    let w = this.state.svg.w * .8, h = this.state.svg.h * .8\r\n    let cell = update(this.state.cell, {\r\n      w: {$set: w},\r\n      h: {$set: h},\r\n      x: {$set: (this.state.svg.w - w) / 2},\r\n      y: {$set: (this.state.svg.h - h) / 2},\r\n    })\r\n    this.setState({cell: cell})\r\n  }\r\n\r\n  setPaddles = () => {\r\n    let svg = this.state.svg, cell = this.state.cell,\r\n        size = 1/9, depth = svg.size/100,\r\n        ready = update(this.state.paddles, {\r\n          depth: {$set: depth},\r\n          x: {\r\n            length: {$set: svg.w * size},\r\n            top: {y: {$set: cell.y},},\r\n            bottom: {y: {$set: cell.y + cell.h - depth}, },\r\n          },\r\n          y: {\r\n            length: {$set: svg.h * size},\r\n            left: {x: {$set: cell.x},},\r\n            right: {x: {$set: cell.x + cell.w - depth},},\r\n          },\r\n        })\r\n    this.setState({paddles: ready})\r\n  }\r\n\r\n  pickPaddles = () => {\r\n    const printArr = (min, max) => {\r\n      max = max === undefined ? min : max\r\n      let arr = []\r\n      for (let i = 0; i < 4; i++) {\r\n        arr.push(Math.round(Math.random()))\r\n      }\r\n      let arrSum = arr.reduce( (a, b) => a + b )\r\n      return min <= arrSum && arrSum <= max ? arr : printArr(min, max)\r\n    }\r\n\r\n    // keys sets up \"level\" conditions based on score\r\n    let keys\r\n    if (this.state.score === ':(') {\r\n      keys = [0,0,0,0]\r\n    } else if (this.state.score < 2) {\r\n      keys = [0,1,0,0]\r\n    } else if (this.state.score < 5) {\r\n      keys = printArr(1)\r\n    } else if (this.state.score < 6) {\r\n      keys = printArr(2)\r\n    } else if (this.state.score < 7) {\r\n      keys = printArr(1, 2)\r\n    } else if (this.state.score < 15) {\r\n      keys = printArr(2, 3)\r\n    } else { keys = printArr(3, 4)}\r\n\r\n    let on = update(this.state.paddles, {\r\n      x: {\r\n        top: {display: {$set: keys[0] ? 1 : 0 },},\r\n        bottom: {display: {$set: keys[1] ? 1 : 0 },},\r\n      },\r\n      y: {\r\n        left: {display: {$set: keys[2] ? 1 : 0 },},\r\n        right: {display: {$set: keys[3] ? 1 : 0 },},\r\n      },\r\n    })\r\n    this.setState({paddles: on})\r\n  }\r\n\r\n  setBall = () => {\r\n    let svg = this.state.svg\r\n    let ball = update(this.state.ball, {\r\n      x: {$set: svg.w/2},\r\n      y: {$set: svg.h/2},\r\n      r: {$set: svg.size/100},\r\n      dx: {$set: svg.size/500},\r\n      dy: {$set: svg.size/500},\r\n      })\r\n\r\n    this.setState({ ball: ball })\r\n  }\r\n\r\n  moveBall = () => {\r\n\r\n    let cell = this.state.cell, ball = this.state.ball, bounce = ball,\r\n        pad = this.state.paddles, dx = ball.dx, dy = ball.dy, score = this.state.score\r\n\r\n    // if the ball hits a vertical wall\r\n    if ( ball.x + dx - ball.r < cell.x\r\n          || ball.x + ball.dx + ball.r > cell.x + cell.w) {\r\n      dx *= -1\r\n    // if ball hits horizontal wall\r\n  } else if (ball.y + dy - ball.r  < cell.y\r\n          || ball.y + ball.r + ball.dy > cell.y + cell.h ) {\r\n      dy *= -1\r\n    // if ball hits x paddle. paddle must be present.\r\n  } else if (( ball.y - ball.r + dy <= cell.y + pad.depth && pad.x.top.display > 0 )\r\n    || ( ball.y + ball.r + dy >= cell.y + cell.h - pad.depth && pad.x.bottom.display > 0 )) {\r\n    if (pad.x.x <= ball.x + ball.r + dx && ball.x - ball.r + dx <= pad.x.x + pad.x.length) {\r\n      dy *= -1\r\n      score += 1\r\n      this.props.score(score)\r\n      this.pickPaddles()\r\n    } else {\r\n      dy = 0\r\n      score = ':('\r\n      this.props.score(score)\r\n    }\r\n    // if ball hits y paddle. paddle must be present.\r\n  } else if (( ball.x - ball.r + dx <= cell.x + pad.depth && pad.y.left.display > 0 )\r\n    || ( ball.x + ball.r + dx >= cell.x + cell.w - pad.depth && pad.y.right.display > 0 )) {\r\n    if (pad.y.y <= ball.y + ball.r + dx && ball.y - ball.r + dy <= pad.y.y + pad.y.length) {\r\n      dx *= -1\r\n      score += 1\r\n      this.props.score(score)\r\n      this.pickPaddles()\r\n    } else {\r\n      dx = 0\r\n      score = ':('\r\n      this.props.score(score)\r\n    }\r\n  }\r\n\r\n    bounce = update(ball, {\r\n      dx: {$set: dx},\r\n      dy: {$set: dy},\r\n      })\r\n\r\n    let move = update(bounce, {\r\n      x: {$set: ball.x + ball.dx},\r\n      y: {$set: ball.y + ball.dy},\r\n      })\r\n\r\n    this.setState({ ball: move, score: score })\r\n  }\r\n\r\n  movePaddles = () => {\r\n    //takes position data from <Input /> and uses it to update paddle position\r\n    let cell = this.state.cell, pad = this.state.paddles,\r\n      halfX = pad.x.length / 2, halfY = pad.y.length / 2,\r\n      rightBound = cell.x + cell.w - halfX,\r\n      lowerBound = cell.y + cell.h - halfY,\r\n      x = this.props.x, y = this.props.y; //[x,y]=input position\r\n\r\n    x = x < cell.x + halfX ? cell.x : x > rightBound ? rightBound - halfX : x - halfX\r\n    y = y < cell.y + halfY ? cell.y : y > lowerBound ? lowerBound - halfY : y - halfY\r\n\r\n    let move = update(pad, {\r\n      x: {x: {$set: x }},\r\n      y: {y: {$set: y }},\r\n    })\r\n\r\n    this.setState({ paddles: move })\r\n  }\r\n\r\n  setGame = () => {\r\n    this.props.score('hit the ball')\r\n    this.setState({score: 0})\r\n    this.sizeGame()\r\n  }\r\n\r\n  sizeGame = () => {\r\n    this.setSvg()\r\n    setTimeout(this.setCell)\r\n    setTimeout(this.setBall)\r\n    setTimeout(this.setPaddles, 1)\r\n  }\r\n\r\n  animate = () => {\r\n    this.movePaddles()\r\n    this.moveBall()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setGame()\r\n    window.addEventListener('resize', this.sizeGame)\r\n    window.setInterval(this.animate, 10)\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return this.state !== nextState\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.stage === 1\r\n    || (this.props.stage === 2 && this.state.score === ':(')) {\r\n      this.pickPaddles()\r\n      this.props.nextStage()\r\n    } else if (this.props.stage === 4) {\r\n      this.props.nextStage(0)\r\n      this.setGame()\r\n    } else if (this.props.sh === true) {\r\n      this.pickPaddles()\r\n      this.props.shuffle()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.sizeGame)\r\n    window.clearInterval(window.setInterval(this.animate, 10))\r\n  }\r\n\r\n  render() {\r\n    let s = this.state\r\n    let pad = this.state.paddles\r\n    return(\r\n      <svg\r\n        width={ s.svg.w } height={ s.svg.h }\r\n        viewBox={ s.svg.box } onClick={ this.handleClick }>\r\n\r\n        <rect id='cell'\r\n          width={ s.cell.w } height={ s.cell.h }\r\n          x={ s.cell.x } y={ s.cell.y } />\r\n\r\n        <circle id='ball'\r\n          cx={ s.ball.x } cy={ s.ball.y }\r\n          r={ s.ball.r } fill={ this.props.fill } />\r\n\r\n        <rect id='paddleXT'\r\n          width={ pad.x.length } height={ pad.depth }\r\n          x={ pad.x.x } y={ pad.x.top.y }\r\n          fill={ this.props.fill } fillOpacity={ pad.x.top.display } />\r\n        <rect id='paddleXB'\r\n          width={ pad.x.length } height={ pad.depth }\r\n          x={ pad.x.x } y={ pad.x.bottom.y }\r\n          fill={ this.props.fill } fillOpacity={ pad.x.bottom.display } />\r\n        <rect id='paddleYL'\r\n          width={ pad.depth } height={ pad.y.length }\r\n          x={ pad.y.left.x } y={ pad.y.y }\r\n          fill={ this.props.fill } fillOpacity={pad.y.left.display} />\r\n        <rect id='paddleYR'\r\n          width={ pad.depth } height={ pad.y.length }\r\n          x={ pad.y.right.x } y={ pad.y.y }\r\n          fill={ this.props.fill } fillOpacity={pad.y.right.display} />\r\n\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n//import update from 'immutability-helper'\r\nimport Game from './game/Game.js'\r\nimport './App.css'\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      stage: 0,\r\n      shuffle: false,\r\n    }\r\n  }\r\n\r\ngetScore = score => {\r\n  this.setState({ score })\r\n}\r\n\r\ngetPosition = ( x, y ) => {\r\n  this.setState({ x, y })\r\n}\r\n\r\nnextStage = stage => {\r\n  if (stage === undefined) { stage = this.state.stage + 1 }\r\n  this.setState({ stage })\r\n}\r\n\r\nshuffle = () => {\r\n  let shuffle = this.state.shuffle ? false : true\r\n  this.setState({shuffle})\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <span id='view'>\r\n        <Input pos={this.getPosition}\r\n          score={this.state.score} shuffle={this.shuffle}\r\n          stage={this.state.stage} nextStage={this.nextStage}/>\r\n        <Game fill='#eeeeee'\r\n          score={this.getScore}\r\n          stage={this.state.stage} nextStage={this.nextStage}\r\n          x={this.state.x} y={this.state.y}\r\n          shuffle={this.shuffle} sh={this.state.shuffle}/>\r\n        <Score score={this.state.score} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  changePos = e => {\r\n    let [x, y] = e.type === 'mousemove' ?\r\n      ([ e.clientX, e.clientY ]) :\r\n      ([ e.touches[0].clientX, e.touches[0].clientY ]);\r\n    this.props.pos(x, y)\r\n    return false\r\n  }\r\n\r\n  handleClick = e => {\r\n    if (this.props.stage === 0 || this.props.stage === 3){\r\n      this.props.nextStage()\r\n    } else {this.props.shuffle()}\r\n    //this.state.score === 'x' ? this.setGame() : this.pickPaddles()\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span style={styles.input} onClick={this.handleClick}\r\n        onMouseMove={this.changePos} onTouchMove={this.changePos} />\r\n    )\r\n  }\r\n}\r\n\r\nclass Score extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        score: 0,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span id='score' style={styles.score}>\r\n        {this.props.score}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  score: {\r\n    fontSize: '6vh',\r\n    color: '#eee',\r\n    textAlign: 'center',\r\n    zIndex: 3,\r\n    position: 'absolute',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    backgroundColor: 'cyan',\r\n    opacity: 0,\r\n    zIndex: 5,\r\n  },\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}